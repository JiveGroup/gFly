{
    "swagger": "2.0",
    "info": {
        "description": "gFly API. \u003cb\u003eNote: Authorize value `Bearer \u003cACCESS_TOKEN\u003e`\u003c/b\u003e.",
        "title": "API",
        "termsOfService": "https://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "admin@jivecode.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://mit-license.org/"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/refresh": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Refresh user token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "refresh user token",
                "parameters": [
                    {
                        "description": "RefreshToken payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gfly_pkg_modules_auth_request.RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_pkg_modules_auth_response.SignIn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Authenticating user's credentials then return access and refresh token if valid. Otherwise, return an error message.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "authenticating user's credentials",
                "parameters": [
                    {
                        "description": "Signin payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gfly_pkg_modules_auth_request.SignIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_pkg_modules_auth_response.SignIn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/auth/signout": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "De-authorize user and delete refresh token from Redis.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "de-authorize user and delete refresh token from Redis",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Create a new user with `request.SignUp` body then add `role id` to table `user_roles` with current `user id`",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "Signup payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gfly_pkg_modules_auth_request.SignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_pkg_modules_auth_response.SignUp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/info": {
            "get": {
                "description": "Get API server information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Misc"
                ],
                "summary": "Get API info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_response.ServerInfo"
                        }
                    }
                }
            }
        },
        "/password/forgot": {
            "post": {
                "description": "Forgot password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Password"
                ],
                "summary": "Forgot password",
                "parameters": [
                    {
                        "description": "Forgot password payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gfly_pkg_modules_auth_request.ForgotPassword"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "description": "Reset password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Password"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "description": "Reset password payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gfly_pkg_modules_auth_request.ResetPassword"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Function list all users data\n\u003cb\u003eKeyword fields:\u003c/b\u003e roles.name, roles.slug, users.email, users.fullname, users.phone, user.status\n\u003cb\u003eOrder_by fields:\u003c/b\u003e users.email, users.fullname, users.phone, users.status, users.last_access_at",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Function list all users data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order By",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items Per Page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_response.ListUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Function allows Administrator create a new user with specific roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user for Administrator",
                "parameters": [
                    {
                        "description": "CreateUser payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_request.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Function get user by given id. If user not exists, return not found status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by given id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_response.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Function allows Administrator update users table or authorize user roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Function allows Administrator update an existing user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateUser payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_request.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Function hard-delete user with its roles by given userID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user by given userID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_response.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/users/{id}/status": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user's status by ID. \u003cb\u003eAdministrator privilege required\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user's status by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user status data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_request.UpdateUserStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gfly_internal_http_response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.Data": {
            "type": "object",
            "additionalProperties": {}
        },
        "gfly_internal_domain_models_types.Role": {
            "type": "string",
            "enum": [
                "na",
                "admin",
                "moderator",
                "member",
                "guest"
            ],
            "x-enum-varnames": [
                "RoleNA",
                "RoleAdmin",
                "RoleModerator",
                "RoleMember",
                "RoleGuest"
            ]
        },
        "gfly_internal_domain_models_types.UserStatus": {
            "type": "string",
            "enum": [
                "active",
                "pending",
                "blocked"
            ],
            "x-enum-varnames": [
                "UserStatusActive",
                "UserStatusPending",
                "UserStatusBlocked"
            ]
        },
        "gfly_internal_http_request.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password",
                "phone"
            ],
            "properties": {
                "avatar": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://i.pravatar.cc/32"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "john@jivecode.com"
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "M1PassW@s"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "0989831911"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gfly_internal_domain_models_types.Role"
                    },
                    "example": [
                        "admin",
                        "user"
                    ]
                },
                "status": {
                    "type": "string",
                    "example": "pending"
                }
            }
        },
        "gfly_internal_http_request.UpdateUser": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://i.pravatar.cc/32"
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "M1PassW@s"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "0989831911"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gfly_internal_domain_models_types.Role"
                    },
                    "example": [
                        "admin",
                        "user"
                    ]
                }
            }
        },
        "gfly_internal_http_request.UpdateUserStatus": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "enum": [
                        "active",
                        "pending",
                        "blocked"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/gfly_internal_domain_models_types.UserStatus"
                        }
                    ],
                    "example": "active"
                }
            }
        },
        "gfly_internal_http_response.ListUser": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gfly_internal_http_response.User"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/http.Meta"
                }
            }
        },
        "gfly_internal_http_response.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "$ref": "#/definitions/gfly_internal_domain_models_types.Role"
                }
            }
        },
        "gfly_internal_http_response.ServerInfo": {
            "description": "contains system metadata including name, server prefix, and server name.",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "ThietNgon API"
                },
                "prefix": {
                    "type": "string",
                    "example": "/api/v1"
                },
                "server": {
                    "type": "string",
                    "example": "ThietNgon-Go Server"
                }
            }
        },
        "gfly_internal_http_response.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "blocked_at": {
                    "type": "string",
                    "example": "null"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "null"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_access_at": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gfly_internal_http_response.Role"
                    }
                },
                "status": {
                    "$ref": "#/definitions/gfly_internal_domain_models_types.UserStatus"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "verified_at": {
                    "type": "string",
                    "example": "2023-01-01T10:30:00Z"
                }
            }
        },
        "gfly_pkg_modules_auth_request.ForgotPassword": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "john@jivecode.com"
                }
            }
        },
        "gfly_pkg_modules_auth_request.RefreshToken": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "d1a4216a226cbf75eaefc9107c2c64b6b2c0f18cd8634e3a6f495146c38e1324.1747914602"
                }
            }
        },
        "gfly_pkg_modules_auth_request.ResetPassword": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "M1PassW@s"
                },
                "token": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "293r823or832eioj2eo9282o423"
                }
            }
        },
        "gfly_pkg_modules_auth_request.SignIn": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "P@seWor9"
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "admin@gfly.dev"
                }
            }
        },
        "gfly_pkg_modules_auth_request.SignUp": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password",
                "phone"
            ],
            "properties": {
                "avatar": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://i.pravatar.cc/32"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "john@jivecode.com"
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "M1PassW@s"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "0989831911"
                },
                "status": {
                    "type": "string",
                    "example": "pending"
                }
            }
        },
        "gfly_pkg_modules_auth_response.SignIn": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "refresh": {
                    "type": "string"
                }
            }
        },
        "gfly_pkg_modules_auth_response.SignUp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/gfly_internal_domain_models_types.UserStatus"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "http.Error": {
            "description": "Generic error response structure",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code",
                    "type": "string",
                    "example": "BAD_REQUEST"
                },
                "data": {
                    "description": "Useful for validation's errors",
                    "allOf": [
                        {
                            "$ref": "#/definitions/core.Data"
                        }
                    ]
                },
                "message": {
                    "description": "Error message description",
                    "type": "string",
                    "example": "Bad request"
                }
            }
        },
        "http.Meta": {
            "description": "Contains pagination metadata including current page, items per page, and total count",
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "per_page": {
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "type": "integer",
                    "example": 1354
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}